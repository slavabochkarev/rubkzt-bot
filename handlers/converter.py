def try_convert_amount(message: str, data: dict) -> str | None:
    """–ü—Ä–æ–±—É–µ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ '<amount> <currency>' –∏ —É–º–Ω–æ–∂–∏—Ç—å –Ω–∞ –∫—É—Ä—Å –¶–ë –†–§."""
    try:
        parts = message.strip().lower().split()
        if len(parts) != 2:
            return None

        amount_str, currency_code = parts
        amount = float(amount_str.replace(",", "."))
        currency_code = currency_code.upper()

        if currency_code not in data["Valute"]:
            return f"‚ùå –í–∞–ª—é—Ç–∞ '{currency_code}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –¥–∞–Ω–Ω—ã—Ö –¶–ë –†–§."

        if "KZT" in data["Valute"]:
            rate = 1 / (data["Valute"]["KZT"]["Value"] / data["Valute"]["KZT"]["Nominal"])
            converted = round(amount / rate, 2)
        elif currency_code in data["Valute"]:
            # –õ—é–±–∞—è –¥—Ä—É–≥–∞—è –≤–∞–ª—é—Ç–∞
            nominal = data["Valute"][currency_code]["Nominal"]
            rate = data["Valute"][currency_code]["Value"] / nominal
            converted = round(amount * rate, 2)
        else:
            return f"‚ùå –í–∞–ª—é—Ç–∞ '{currency_code}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –¥–∞–Ω–Ω—ã—Ö –¶–ë –†–§."
                       
        name = data["Valute"][currency_code]["Name"]

        return f"üí∞ {amount} {currency_code} ({name}) √ó {rate} = {converted} RUB"
    except Exception:
        return None
